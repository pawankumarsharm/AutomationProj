// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SalemWeb.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("SoftwarePortal")]
    public partial class SoftwarePortalFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SoftwarePortal.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SoftwarePortal", "\tTest the functionality of Software Portal", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03 Verify available software is displayed in the the portal.")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void _03VerifyAvailableSoftwareIsDisplayedInTheThePortal_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 Verify available software is displayed in the the portal.", null, new string[] {
                        "mytag"});
#line 5
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
 testRunner.Given("I have logged in to the Salem web portal using a valid credentials.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Organistaion"});
            table1.AddRow(new string[] {
                        "3M Internal Group"});
#line 7
 testRunner.And("I choose the organisation/groups to continue with", ((string)(null)), table1, "And ");
#line 10
 testRunner.Then("I navigate to the software portal.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
 testRunner.And("Verify the list of displayed softwares.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02 Verify that the search functionality is working in the software portal page.")]
        public virtual void _02VerifyThatTheSearchFunctionalityIsWorkingInTheSoftwarePortalPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 Verify that the search functionality is working in the software portal page.", null, ((string[])(null)));
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 14
 testRunner.Given("I have logged in to the Salem web portal using a valid credentials.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Organistaion"});
            table2.AddRow(new string[] {
                        "3M Internal Group"});
#line 15
 testRunner.And("I choose the organisation/groups to continue with", ((string)(null)), table2, "And ");
#line 18
 testRunner.Then("I navigate to the software portal.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Software"});
            table3.AddRow(new string[] {
                        "TestQAKSV1"});
#line 19
 testRunner.And("I enter a particular software to search in the search box.", ((string)(null)), table3, "And ");
#line 22
 testRunner.Then("Verify if the filtered software exists or not.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04 Verify if the edit functionality is working as expected.")]
        public virtual void _04VerifyIfTheEditFunctionalityIsWorkingAsExpected_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 Verify if the edit functionality is working as expected.", null, ((string[])(null)));
#line 24
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 25
    testRunner.Given("I have logged in to the Salem web portal using a valid credentials.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Organistaion"});
            table4.AddRow(new string[] {
                        "3M Internal Group"});
#line 26
 testRunner.And("I choose the organisation/groups to continue with", ((string)(null)), table4, "And ");
#line 29
 testRunner.Then("I navigate to the software portal.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Software"});
            table5.AddRow(new string[] {
                        "TestQAKSV1"});
#line 30
 testRunner.And("I enter a particular software to search in the search box.", ((string)(null)), table5, "And ");
#line 33
 testRunner.Then("Verify if the filtered software exists or not.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 34
 testRunner.Then("I click on the edit button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Bussiness_Unit",
                        "Trial_Period",
                        "Def_Max_Act_Key",
                        "Ava_for_self_req"});
            table6.AddRow(new string[] {
                        "TestQAKSV1",
                        "3M Scott",
                        "3",
                        "5",
                        "No"});
#line 35
 testRunner.And("I modify the values in the software description.", ((string)(null)), table6, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("05 Delete a particular Software.")]
        public virtual void _05DeleteAParticularSoftware_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05 Delete a particular Software.", null, ((string[])(null)));
#line 39
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 40
    testRunner.Given("I have logged in to the Salem web portal using a valid credentials.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Organistaion"});
            table7.AddRow(new string[] {
                        "3M Internal Group"});
#line 41
 testRunner.And("I choose the organisation/groups to continue with", ((string)(null)), table7, "And ");
#line 44
 testRunner.Then("I navigate to the software portal.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Software"});
            table8.AddRow(new string[] {
                        "TestQAKSV1"});
#line 45
 testRunner.And("I enter a particular software to search in the search box.", ((string)(null)), table8, "And ");
#line 48
 testRunner.Then("Verify if the filtered software exists or not.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 49
 testRunner.And("I Click on the delete button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.Then("Click on Ok button to confirm the deletion.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01 Create a new Software.")]
        public virtual void _01CreateANewSoftware_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 Create a new Software.", null, ((string[])(null)));
#line 52
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 53
    testRunner.Given("I have logged in to the Salem web portal using a valid credentials.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Organistaion"});
            table9.AddRow(new string[] {
                        "3M Internal Group"});
#line 54
 testRunner.And("I choose the organisation/groups to continue with", ((string)(null)), table9, "And ");
#line 57
 testRunner.Then("I navigate to the software portal.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 58
 testRunner.And("I click on Add New Software Button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "NameSftwre",
                        "SoftwareType",
                        "Available_SelfRequest",
                        "BussinessUnit",
                        "BetaSoftware",
                        "ShortDesc"});
            table10.AddRow(new string[] {
                        "TestQAKSV1",
                        "MOBILE",
                        "Yes",
                        "3M Scott",
                        "Yes",
                        "This QA test software. Will be deleted soon."});
#line 59
 testRunner.Then("I enter the software details.", ((string)(null)), table10, "Then ");
#line 62
 testRunner.And("Click on create button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.Then("Verify the success message.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
