// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SalemQA.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("OrgAdmin Accessiblity")]
    public partial class OrgAdminAccessiblityFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "OrgAdmin Accessiblity.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "OrgAdmin Accessiblity", "\tSimple calculator for adding two numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Org Admin Accessiblity Improvements.")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        [NUnit.Framework.TestCaseAttribute("rahul66666666666@gmail.com", "Summer#2020", "NathCorp", new string[] {
                "source:data.xlsx:sheet1"}, Category="source:data.xlsx:sheet1")]
        public virtual void OrgAdminAccessiblityImprovements_(string orgusername, string orgpas, string org, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "mytag"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Org Admin Accessiblity Improvements.", null, @__tags);
#line 5
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
 testRunner.Given("User navigates to the Salem Home Page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.Then(string.Format("In the Home Page, Click on the Login Link and enter the {0} and {1} to login with" +
                        " OrgAdmin account.", orgusername, orgpas), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 8
 testRunner.And(string.Format("Select the users organistion {0}", org), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.When("Logged in verify if able to add users.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then("Verify if user is able to download the assigned software.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
 testRunner.And("Verify if user is able to request the unassigned software.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Software has been realeased to Organization without an Org Admin")]
        [NUnit.Framework.TestCaseAttribute("srani.cw@mmm.com", "Summer#2020", "NCOrgTestQA01", "India", "Jharkhand", "Ranchi", "3M Scott", "Fire Department", "Fire Services", "Active", "NCTest01", "QA01", "NCTestQA01@test.com", "1234567891", new string[] {
                "source:OrganisationCreateData.xlsx"}, Category="source:OrganisationCreateData.xlsx")]
        public virtual void SoftwareHasBeenRealeasedToOrganizationWithoutAnOrgAdmin(string orgusername, string orgpas, string orgName, string country, string state, string city, string bussiness_Unit, string account_Type, string field, string status, string firstName, string lastName, string email, string contactNumber, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Software has been realeased to Organization without an Org Admin", null, exampleTags);
#line 17
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 18
 testRunner.Given("User navigates to the Salem Home Page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.Then(string.Format("In the Home Page, Click on the Login Link and enter the {0} and {1} to login with" +
                        " super admin.", orgusername, orgpas), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
 testRunner.And("Select the users organistion.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.Then(string.Format("Navigate to Orgnazation and create a new one {0},{1},{2},{3},{4},{5},{6},{7},{8}," +
                        "{9},{10},{11}", orgName, firstName, country, lastName, state, email, city, contactNumber, bussiness_Unit, account_Type, field, status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 22
 testRunner.And("Verify Software cannot be released without org admin.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Org Admin Localization issue.")]
        [NUnit.Framework.TestCaseAttribute("rahul66666666666@gmail.com", "Summer#2020", "NathCorp", new string[] {
                "source:data.xlsx:sheet1"}, Category="source:data.xlsx:sheet1")]
        public virtual void OrgAdminLocalizationIssue_(string orgusername, string orgpas, string org, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Org Admin Localization issue.", null, exampleTags);
#line 28
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 29
 testRunner.Given("User navigates to the Salem Home Page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
 testRunner.Then(string.Format("In the Home Page, Click on the Login Link and enter the {0} and {1} to login with" +
                        " OrgAdmin account.", orgusername, orgpas), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
 testRunner.And(string.Format("Select the users organistion {0}", org), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.When("Logged in verify localization based on language selected.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Org Admin should able to create another org admin.")]
        [NUnit.Framework.TestCaseAttribute("rahul66666666666@gmail.com", "Summer#2020", "NathCorp", new string[] {
                "source:data.xlsx:sheet1"}, Category="source:data.xlsx:sheet1")]
        public virtual void OrgAdminShouldAbleToCreateAnotherOrgAdmin_(string orgusername, string orgpas, string org, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Org Admin should able to create another org admin.", null, exampleTags);
#line 38
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 39
 testRunner.Given("User navigates to the Salem Home Page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 40
 testRunner.Then(string.Format("In the Home Page, Click on the Login Link and enter the {0} and {1} to login with" +
                        " OrgAdmin account.", orgusername, orgpas), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 41
 testRunner.And(string.Format("Select the users organistion {0}", org), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.When("Logged in, then verify if Org Admin option is available in the user creation page" +
                    ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Org Admin should not see expires on in the Software Section.")]
        [NUnit.Framework.TestCaseAttribute("rahul66666666666@gmail.com", "Summer#2020", "NathCorp", new string[] {
                "source:data.xlsx:sheet1"}, Category="source:data.xlsx:sheet1")]
        public virtual void OrgAdminShouldNotSeeExpiresOnInTheSoftwareSection_(string orgusername, string orgpas, string org, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Org Admin should not see expires on in the Software Section.", null, exampleTags);
#line 48
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 49
 testRunner.Given("User navigates to the Salem Home Page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 50
 testRunner.Then(string.Format("In the Home Page, Click on the Login Link and enter the {0} and {1} to login with" +
                        " OrgAdmin account.", orgusername, orgpas), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 51
 testRunner.And(string.Format("Select the users organistion {0}", org), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.When("Logged in, then verify if Org Admin does not have Expires on Column in Software S" +
                    "ection.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

